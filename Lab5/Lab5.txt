00:		lui $5, 0x0302
01:		ori $5, $5, 0x0100 	
02:		ori $6, $0, 0x0908
03:		lui $29, 0x1000
04:		sw $5, 0($29)  		--0x03020100 @0x00
05:		sh $6, 4($29) 		--0x0908 @0x04
06:		ori $6, $0, 0x0b0a 
07:		sh $6, 6($29)		--0x0b0a @0x06
08:		lui $30, 0x1000 	
09:		ori $30, $30, 0x0008 
0a:		add $15, $30, $0
BRANCH_3:
0b:		lbu $18, 0($29)    	--should load 00 into 18 --  ??@0x01
0c:		lbu $17, 4($29) 	--should load 08 into 17 --  ??@0x05
0d:		add $16, $17, $18 	
0e:		slti $10, $16, 0x000b
0f:		beq $10, $0, 0x0002 (BRANCH_1) (+2 -> branches to 12)
10:		add $17, $16, $18
11:		j 0x0013 (JUMP_1)
BRANCH_1:
12:		sub $17, $16, $18
JUMP_1:
13:		slti $10, $17, 0x000b
14:		beq $10, $0, 0x0002 (BRANCH_2)
15:		add $18, $17, $16 
16:		j 0x0018 (JUMP_2)
BRANCH_2:
17:		sub $18, $16, $17
JUMP_2:
18:		sb $18, 0($30) 		--0x10 @0x08
19:		addi $30, $30, 0x0001
1a:		addi $29, $29, 0x0001
1b:		bne $29, $15, 0xffef  (BRANCH_3) (-17 -> branches to 0B)
1c:		ori $19, $0, 0x0008
1d:		subu $29, $29, $19
1e:		lw $1, 0($29)
1f:		lw $2, 4($29)
20:		lw $3, 8($29)
21:		lw $4, 12($29)
END: 
22:		j 0x0022 	(END)
